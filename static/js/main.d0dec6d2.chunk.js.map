{"version":3,"sources":["Redux/Actions/ActionType.js","Redux/Actions/UserAction.js","Redux/Actions/DataAction.js","Components/ChatBox/LikeButton.js","Components/ChatBox/DeleteButton.js","Components/ChatBox/ViewComment.js","Components/ChatBox/AddComment.js","Components/ChatBox/CommentBox.js","images/first.jpg","images/second.jpeg","images/ugTtPzn-deadpool-wallpaper-hd.jpg","images/NqJ0OAm-deadpool-wallpaper-hd.jpg","images/uwp314735.jpeg","Demo.js","Components/ChatBox/Card.js","Components/ChatBox/DisplayBox.js","images/E2.png","Components/UserDetails/Profile.js","images/uwp332474.jpeg","Components/Common/AddPost.js","images/Logo.jpg","Components/Common/NavBar.js","Components/Common/Home.js","Redux/Reducer/DataReducer.js","Redux/Reducer/UserReducer.js","Redux/Reducer/UIReducer.js","Redux/Reducer/RootReducer.js","Redux/Store.js","Components/Auth/LoginSignUp.js","App.js","index.js"],"names":["SET_USER_DATA","SET_ERRORS","LOADING_UI","CLEAR_ERRORS","STOP_LOADING_UI","SET_POSTS","SET_POST","POST_POST","data","dispatch","type","payload","addPost","newpost","makeStyles","likesButton","right","LikeButton","deleteButton","position","left","top","ViewComment","CommentBox","demoPost","postID","userName","image","first","likeCount","commentCount","createdAt","post","second","third","fourth","fifth","Card","className","src","alt","style","display","flexDirection","marginLeft","fontSize","fontWeight","color","DisplayBox","props","posts","useSelector","state","map","item","Profile","user","userData","useState","handler","bio","location","setData","useHistory","useDispatch","closeDialog","dialog","document","getElementById","clearState","close","handleChange","e","target","name","value","Previous","ProfileImage","EditIcon","onClick","showModal","title","substring","id","onChange","placeholder","rows","UserActions","toast","error","AddPost","userHandler","setPost","cols","jsonObj","moment","format","DataActions","success","NavBar","history","Logo","columnGap","push","Home","loading","localStorage","getItem","initialState","authenticated","errors","rootReducer","combineReducers","action","store","createStore","compose","applyMiddleware","thunkMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","LoginSignUp","onSubmit","email","password","confirmPassword","handlerName","setUser","setDisableButton","previous","validateEmail","test","useEffect","height","required","setTimeout","setItem","marginTop","Token","App","exact","path","component","render","configure","ReactDOM"],"mappings":"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","file":"static/js/main.d0dec6d2.chunk.js","sourcesContent":["// User reducer types\r\nexport const SET_AUTHENTICATED = 'SET_AUTHENTICATED';\r\nexport const SET_UNAUTHENTICATED = 'SET_UNAUTHENTICATED';\r\nexport const SET_USER = 'SET_USER';\r\nexport const LOADING_USER = 'LOADING_USER';\r\nexport const MARK_NOTIFICATIONS_READ = 'MARK_NOTIFICATIONS_READ';\r\n\r\n\r\nexport const SET_USER_DATA = 'SET_USER_DATA';\r\n// UI reducer types\r\nexport const SET_ERRORS = 'SET_ERRORS';\r\nexport const LOADING_UI = 'LOADING_UI';\r\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\r\nexport const LOADING_DATA = 'LOADING_DATA';\r\nexport const STOP_LOADING_DATA = 'STOP_LOADING_DATA';\r\nexport const STOP_LOADING_UI = 'STOP_LOADING_UI';\r\n// Data reducer types\r\nexport const SET_POSTS = 'SET_POSTS';\r\nexport const SET_POST = 'SET_POST';\r\nexport const LIKE_POST = 'LIKE_POST';\r\nexport const UNLIKE_POST = 'UNLIKE_POST';\r\nexport const DELETE_POST = 'DELETE_POST';\r\nexport const POST_POST = 'POST_POST';\r\nexport const SUBMIT_COMMENT = 'SUBMIT_COMMENT';","import {\r\n  SET_USER,\r\n  SET_ERRORS,\r\n  CLEAR_ERRORS,\r\n  LOADING_UI,\r\n  STOP_LOADING_UI,\r\n  SET_UNAUTHENTICATED,\r\n  LOADING_USER,\r\n  MARK_NOTIFICATIONS_READ,\r\n  SET_USER_DATA\r\n} from './ActionType';\r\nimport axios from 'axios';\r\n\r\n\r\nexport default {\r\n\r\n  setUserData(data){\r\n    return (dispatch)=>{\r\n      dispatch({type: SET_USER_DATA, payload:data});\r\n    }\r\n  },\r\n\r\n\r\n  \r\n  loginUser(userData, history){\r\n    return (dispatch) => {\r\n      dispatch({ type: LOADING_UI });\r\n      dispatch({ type: CLEAR_ERRORS });\r\n\r\n      setTimeout(()=>{\r\n        dispatch({ type: STOP_LOADING_UI });\r\n        history.push('/home');\r\n      },1000)\r\n    }\r\n  },\r\n\r\n  signupUser(newUserData, history) {\r\n\r\n    return  async (dispatch) => {\r\n      dispatch({ type: LOADING_UI });\r\n      dispatch({ type: CLEAR_ERRORS });\r\n      \r\n      setTimeout(()=>{\r\n        dispatch({ type: STOP_LOADING_UI });\r\n        history.push('/home');\r\n      },1000)\r\n\r\n    }\r\n  },\r\n\r\n\r\n  logoutUser(history) {\r\n    return  (dispatch) => {\r\n      history.push('/');\r\n      localStorage.removeItem('Token');\r\n      delete axios.defaults.headers.common['Authorization'];\r\n      dispatch({ type: SET_UNAUTHENTICATED });\r\n    }\r\n  },\r\n\r\n\r\n\r\n  getUserData() {\r\n    return (dispatch) => {\r\n      dispatch({ type: LOADING_USER });\r\n      axios\r\n        .get('/user')\r\n        .then((res) => {\r\n          console.log(\"Response\",res.data);\r\n          dispatch({\r\n            type: SET_USER,\r\n            payload: res.data\r\n          });\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  },\r\n\r\n  /*\r\n   uploadImage(formData){ (dispatch) => {\r\n    dispatch({ type: LOADING_USER });\r\n    axios\r\n      .post('/user/image', formData)\r\n      .then(() => {\r\n        dispatch(getUserData());\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }},\r\n  */\r\n  editUserDetails(userDetails) {\r\n    return (dispatch) => {\r\n      dispatch({ type: LOADING_USER });\r\n      axios\r\n        .post('/user', userDetails)\r\n        .then(() => {\r\n          // dispatch(getUserData());\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  },\r\n  /*\r\n   markNotificationsRead(notificationIds){ (dispatch) => {\r\n    axios\r\n      .post('/notifications', notificationIds)\r\n      .then((res) => {\r\n        dispatch({\r\n          type: MARK_NOTIFICATIONS_READ\r\n        });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }},\r\n  */\r\n\r\n  setAuthorizationHeader(token) {\r\n      const Token = `Bearer ${token}`;\r\n      localStorage.setItem('Token', Token);\r\n      axios.defaults.headers.common['Authorization'] = Token;\r\n  },\r\n\r\n  Errors(errors) {\r\n    return (dispatch) => {\r\n      dispatch({\r\n        type: SET_ERRORS,\r\n        payload: errors\r\n      });\r\n    }\r\n  },\r\n  clearErrors() {\r\n    return (dispatch) => {\r\n      dispatch({ type: CLEAR_ERRORS });\r\n    }\r\n  }\r\n}","import {\r\n  SET_POSTS,\r\n  LOADING_DATA,\r\n  STOP_LOADING_DATA,\r\n  LIKE_POST,\r\n  UNLIKE_POST,\r\n  DELETE_POST,\r\n  SET_ERRORS,\r\n  POST_POST,\r\n  CLEAR_ERRORS,\r\n  LOADING_UI,\r\n  SET_POST,\r\n  STOP_LOADING_UI,\r\n  SUBMIT_COMMENT,\r\n} from \"./ActionType\";\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  addPost(newpost) {\r\n    return (dispatch) => {\r\n      dispatch({ type: POST_POST, payload: newpost });\r\n    };\r\n  },\r\n};\r\n\r\n// Get all posts\r\n// function getPosts() {\r\n\r\n//   return async (dispatch) => {\r\n//     dispatch({ type: LOADING_DATA });\r\n\r\n//     const response =  await  axios.get('/screams')\r\n//     console.log(\"Datas\", response);\r\n//     if (response.status === 200) {\r\n//           dispatch({\r\n//             type: SET_POSTS,\r\n//             payload: response.data\r\n//           });\r\n\r\n//           dispatch({ type: STOP_LOADING_DATA });\r\n//           return response;\r\n//         }\r\n// .then((res) => {\r\n//   console.log(\"Data\", res?.data);\r\n//   console.log(\"DataR\", res);\r\n//   const response = res?.data\r\n//   if (res.status === 200) {\r\n//     dispatch({\r\n//       type: SET_POSTS,\r\n//       payload: response\r\n//     });\r\n\r\n//     dispatch({ type: STOP_LOADING_DATA });\r\n//     return response;\r\n//   }\r\n\r\n// }).catch((err) => {\r\n//   console.log(err?.response);\r\n// });\r\n\r\n//       }\r\n\r\n// }\r\n\r\n//   posts(){\r\n//   const success = (data) => ({\r\n//     type: SET_POSTS,\r\n//     data,\r\n//   });\r\n//   return (dispatch) => {\r\n//     axios.get('/screams').then((res) => {\r\n//       console.log(\"ReduxData\", res?.data)\r\n//       dispatch(success(res.data));\r\n//     })\r\n//   }\r\n// },\r\n// Post a scream\r\n\r\n// Like a scream\r\n// likePost(postId) {\r\n//   return (dispatch) => {\r\n//     axios\r\n//       .get(`/scream/${postId}/like`)\r\n//       .then((res) => {\r\n//         console.log(\"res\",res.data);\r\n//         // dispatch({\r\n//         //   type: LIKE_POST,\r\n//         //   payload: res.data\r\n//         // });\r\n//       })\r\n//       .catch((err) => console.log(err));\r\n//   }\r\n// },\r\n// // Unlike a scream\r\n// unlikePost(postId) {\r\n//   return (dispatch) => {\r\n//     axios\r\n//       .get(`/scream/${postId}/unlike`)\r\n//       .then((res) => {\r\n//         dispatch({\r\n//           type: UNLIKE_POST,\r\n//           payload: res.data\r\n//         });\r\n//       })\r\n//       .catch((err) => console.log(err));\r\n//   }\r\n// },\r\n// /*\r\n// // Submit a comment\r\n//  submitComment = (screamId, commentData) => (dispatch) => {\r\n//   axios\r\n//     .post(`/scream/${screamId}/comment`, commentData)\r\n//     .then((res) => {\r\n//       dispatch({\r\n//         type: SUBMIT_COMMENT,\r\n//         payload: res.data\r\n//       });\r\n//       dispatch(clearErrors());\r\n//     })\r\n//     .catch((err) => {\r\n//       dispatch({\r\n//         type: SET_ERRORS,\r\n//         payload: err.response.data\r\n//       });\r\n//     });\r\n// },\r\n// */\r\n// deleteScream(postId) {\r\n//   return (dispatch) => {\r\n//     axios\r\n//       .delete(`/post/${postId}`)\r\n//       .then(() => {\r\n//         dispatch({ type: DELETE_POST, payload: postId });\r\n//       })\r\n//       .catch((err) => console.log(err));\r\n//   }\r\n// },\r\n// /*\r\n//  getUserData = (userHandle) => (dispatch) => {\r\n//   dispatch({ type: LOADING_DATA });\r\n//   axios\r\n//     .get(`/user/${userHandle}`)\r\n//     .then((res) => {\r\n//       dispatch({\r\n//         type: SET_POSTS,\r\n//         payload: res.data.screams\r\n//       });\r\n//     })\r\n//     .catch(() => {\r\n//       dispatch({\r\n//         type: SET_POSTS,\r\n//         payload: null\r\n//       });\r\n//     });\r\n// };\r\n// */\r\n\r\n// clearErrors() {\r\n//   return (dispatch) => {\r\n//     dispatch({ type: CLEAR_ERRORS });\r\n//   }\r\n// }\r\n","import React from 'react'\r\nimport { connect } from \"react-redux\"\r\nimport { DataActions, UserActions } from \"../../Redux/Actions\"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n//Material UI\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\n// Icons\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  likesButton: {\r\n        // position: 'absolute',\r\n        right: '10%',\r\n        // top: '5%'\r\n      }\r\n})\r\n\r\nfunction LikeButton(props) {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\nconsole.log(\"props\",props);\r\n  const user =\r\n  useSelector((state) => state?.user);\r\n\r\n  function  likedPost(){\r\n        if (\r\n          user?.likes.find(\r\n            (like) => like.screamId === props.id\r\n          )\r\n        )\r\n          return true;\r\n        else return false;\r\n      };\r\n\r\n    function  likePost(){\r\n      dispatch(DataActions.likePost(props.id))\r\n        // props.likePost(props.postId);\r\n      };\r\n    function  unlikePost(){\r\n      dispatch(DataActions.unlikePost(props.id))\r\n\r\n        // props.unlikePost(props.postId);\r\n      };\r\n\r\n    const likeButton= likedPost()?(\r\n        <Tooltip title=\"Undo like\" placement=\"top\" className={classes.likesButton}>\r\n                <IconButton onClick={unlikePost} className=\"button\">\r\n                <FavoriteIcon color=\"primary\" />\r\n                </IconButton>\r\n            </Tooltip>\r\n    ):( <>\r\n        <Tooltip title=\"Like\" placement=\"top\" className={classes.likesButton}>\r\n                <IconButton onClick={likePost} className=\"button\">\r\n                <FavoriteBorder color=\"primary\" />\r\n               \r\n                </IconButton>\r\n            </Tooltip>\r\n             </>\r\n    )\r\n\r\n    return (\r\n        <>\r\n            {likeButton}\r\n        </>\r\n    )\r\n}\r\n\r\n// function  mapStateToProps(state) {\r\n//     return {\r\n//         user: state.user,\r\n//         UI: state.UI\r\n//     }\r\n// }\r\n// function  mapDispatchToProps(dispatch) {\r\n//     return {\r\n//         likePost:(postId)=>{dispatch(likePost(postId))},\r\n//         unlikePost:(postId)=>{dispatch(unlikePost(postId))}\r\n//     }\r\n// }\r\n\r\n\r\n// export default connect(mapStateToProps,mapDispatchToProps)(LikeButton);\r\n\r\n\r\nexport default LikeButton;\r\n","import React, { useState } from 'react'\r\nimport { connect } from \"react-redux\"\r\nimport { DataActions, UserActions } from \"../../Redux/Actions\"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\n//Material UI\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    deleteButton: {\r\n        position: 'absolute',\r\n        left: '85%',\r\n        top: '5%'\r\n      }\r\n})\r\n\r\n\r\nfunction DeleteButton(props) {\r\n    const classes = useStyles();\r\n\r\n    const [state, setState] = useState({\r\n        open: false\r\n    })\r\n\r\n    function handleOpen() {\r\n        setState({ open: true });\r\n    };\r\n\r\n    function handleClose() {\r\n        setState({ open: false });\r\n        console.log(props.user.credentials.handle,props.test.userHandle);\r\n    };\r\n    function deletePost() {\r\n        props.deleteScream(props.test.postId);\r\n        setState({ open: false });\r\n      };\r\n\r\n    const deleteButton =\r\n    props.user.credentials.handle === props.test.userHandle ? (\r\n        <>\r\n        \r\n          <Tooltip title=\"Delete Post\" placement=\"top\" className={classes.deleteButton}>\r\n                <IconButton onClick={handleOpen} className=\"button\">\r\n                <DeleteOutline  color=\"secondary\" />\r\n                </IconButton>\r\n            </Tooltip>\r\n        <Dialog\r\n        open={state.open}\r\n        onClose={handleClose}\r\n        fullWidth\r\n        maxWidth=\"sm\"\r\n      >\r\n        <DialogTitle>\r\n          Are you sure you want to delete this post ?\r\n        </DialogTitle>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={deletePost} color=\"secondary\">\r\n            Delete\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      </>\r\n    ) : null;\r\n\r\n\r\n    return (\r\n        <>\r\n          {deleteButton}  \r\n        </>\r\n    )\r\n}\r\n\r\n// function  mapStateToProps(state,ownProps) {\r\n//     return {\r\n//         user: state.user,\r\n//         UI: state.UI,\r\n//         test:ownProps.post\r\n//     }\r\n// }\r\n// function  mapDispatchToProps(dispatch) {\r\n//     return {\r\n//         deleteScream:(postId)=>{dispatch(deleteScream(postId))}\r\n//     }\r\n// }\r\n\r\n\r\n// export default connect(mapStateToProps,mapDispatchToProps)(DeleteButton);\r\n\r\n\r\nexport default DeleteButton;\r\n","import React from 'react'\r\n\r\nfunction ViewComment() {\r\n    return (\r\n        <div>\r\n            <h2>Comments</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ViewComment\r\n","import React, { useState } from 'react'\r\n\r\n// Material UI \r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({})\r\n\r\n\r\nfunction AddComment() {\r\n    const classes = useStyles();\r\n\r\n    const [state, setState] = useState({\r\n        Comment:\"\",\r\n        open: false\r\n    })\r\n    function handleOpen() {\r\n        setState({ open: true });\r\n    };\r\n\r\n    function handleClose() {\r\n        setState({ open: false });\r\n    };\r\n\r\n    function handleChange(e) {\r\n        const { name, value } = e.target\r\n        setState((prev) => {\r\n            return {\r\n                ...prev,\r\n                [name]: value\r\n            }\r\n        })\r\n    }\r\n    function handleSubmit() {\r\n        handleClose();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button onClick={handleOpen} variant=\"contained\" color=\"primary\">Add Comments</Button>\r\n            <Dialog\r\n                open={state.open}\r\n                onClose={handleClose}\r\n                fullWidth\r\n                maxWidth=\"xs\"\r\n            >\r\n                <DialogTitle>Add a Comment</DialogTitle>\r\n                <DialogContent>\r\n                    <form>\r\n                        <TextField\r\n                            name=\"Comment\"\r\n                            tpye=\"text\"\r\n                            label=\"Comment\"\r\n                            multiline\r\n                            placeholder=\"Start typing...\"\r\n                            className={classes.textField}\r\n                            value={state.Comment}\r\n                            onChange={handleChange}\r\n                            fullWidth\r\n                        />\r\n                    </form>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={handleSubmit} color=\"primary\">\r\n                        Add\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddComment\r\n","import React, { useState } from 'react'\r\nimport ViewComment from \"./ViewComment\"\r\nimport AddComment from \"./AddComment\"\r\n\r\n// Material UI \r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\n\r\nconst useStyles = makeStyles({\r\n\r\n})\r\n\r\n\r\nfunction CommentBox() {\r\n    const classes = useStyles();\r\n\r\n    const [state, setState] = useState({\r\n        open: false\r\n    })\r\n    function handleOpen() {\r\n        setState({ open: true });\r\n    };\r\n\r\n    function handleClose() {\r\n        setState({ open: false });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Tooltip title=\"Show Comments\" placement=\"top\">\r\n                <IconButton onClick={handleOpen} className=\"button\">\r\n                <ChatIcon color=\"primary\" />\r\n                </IconButton>\r\n            </Tooltip>\r\n            <span className=\"Comment\"> 10 Comments</span>\r\n            <Dialog\r\n                open={state.open}\r\n                onClose={handleClose}\r\n                fullWidth\r\n                maxWidth=\"xs\"\r\n            >\r\n                <DialogTitle>Comments</DialogTitle>\r\n                <DialogContent>\r\n                    <ViewComment/>\r\n                    <AddComment/>\r\n                </DialogContent>\r\n                {/* <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={handleSubmit} color=\"primary\">\r\n                        Save\r\n                    </Button>\r\n                </DialogActions> */}\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CommentBox\r\n","export default __webpack_public_path__ + \"static/media/first.cee3f197.jpg\";","export default __webpack_public_path__ + \"static/media/second.e9394508.jpeg\";","export default __webpack_public_path__ + \"static/media/ugTtPzn-deadpool-wallpaper-hd.c3a6afe8.jpg\";","export default __webpack_public_path__ + \"static/media/NqJ0OAm-deadpool-wallpaper-hd.33521f3d.jpg\";","export default __webpack_public_path__ + \"static/media/uwp314735.d57a900f.jpeg\";","\r\nimport first from \"./images/first.jpg\";\r\nimport second from \"./images/second.jpeg\";\r\nimport third from \"./images/ugTtPzn-deadpool-wallpaper-hd.jpg\";\r\nimport fourth from \"./images/NqJ0OAm-deadpool-wallpaper-hd.jpg\";\r\nimport fifth from \"./images/uwp314735.jpeg\";\r\n\r\n\r\nexport const demoPost=[\r\n    {\r\n    postID:1,\r\n    userName:\"Gaurav\",\r\n    image:first,\r\n    likeCount:33,\r\n    commentCount:5,\r\n    createdAt:\"4 days ago\",\r\n    post:`Going to Office trivia in an hour, by myself. Last time I went to Office\r\n    trivia, I won the whole thing by myself. What name should I pick for a\r\n    one-person team??`\r\n},\r\n    {\r\n    postID:2,\r\n    userName:\"Ritesh\",\r\n    image:second,\r\n    likeCount:5,\r\n    commentCount:2,\r\n    createdAt:\"24-04-2023\",\r\n    post:'What character do you relate to most?'\r\n},\r\n    {\r\n    postID:3,\r\n    userName:\"Shubham\",\r\n    image:third,\r\n    likeCount:50,\r\n    commentCount:45,\r\n    createdAt:\"28-02-2023\",\r\n    post:`There is a difference in the taste too, this is why I go to the nearest Pizza Hut, \r\n    spend extra rs 30 and buy this rather than buying the other… the common one is Rs 150 while the other \r\n    which is only given at select channels is Rs 180. Well, it’s really worth for extra Rs 30, as the taste \r\n    is more refreshing and better.`\r\n},\r\n    {\r\n    postID:4,\r\n    userName:\"Varun\",\r\n    image:fourth,\r\n    likeCount:150,\r\n    commentCount:7,\r\n    createdAt:\"27-01-2023\",\r\n    post:`Please suggest where all in bangalore can we get vaggani mirchi. Thank you in advance.`\r\n},\r\n    {\r\n    postID:5,\r\n    userName:\"Ankit\",\r\n    image:fifth,\r\n    likeCount:175,\r\n    commentCount:14,\r\n    createdAt:\"18-01-2023\",\r\n    post:`Posting this on condition of anonymity since my landlord is on social media - \r\n    East Bangalore resident here. We served 2 months' notice to our landlord and vacated the apartment\r\n     one day before the rent agreement expiry. We did not compromise on paying the rent despite the adversities \r\n     we had faced staying in the apartment and the evacuation during last year's flood. \r\n     The maintenance went up sometime in between and the owner asked us to \"adjust it\" from the rent. `\r\n},\r\n]\r\n\r\n","import React from \"react\";\r\nimport \"./ChatBox.css\";\r\nimport Profile from \"../../images/first.jpg\";\r\nfunction Card({ data }) {\r\n  const { userName, image, likeCount, commentCount, createdAt, post } = data;\r\n  return (\r\n    <div className=\"card-container\">\r\n      <div className=\"title-container\">\r\n        <img src={image} alt=\"Profile Photo\" className=\"profile-photo\" />\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            marginLeft: \"15px\",\r\n          }}\r\n        >\r\n          <span\r\n            style={{\r\n              fontSize: \"14px\",\r\n              fontWeight: \"600\",\r\n            }}\r\n          >\r\n            {userName}\r\n          </span>\r\n          <span\r\n            style={{\r\n              color: \"#554b4b\",\r\n              fontSize: \"12px\",\r\n            }}\r\n          >\r\n            {createdAt}\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div className=\"card-post\">{post}</div>\r\n      <div className=\"like-container\">\r\n        <span>\r\n          <b>{likeCount}</b> Likes\r\n        </span>\r\n        <span>\r\n          <b>{commentCount}</b> Comments\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport LikeButton from \"./LikeButton\";\r\nimport DeleteButton from \"./DeleteButton\";\r\nimport CommentBox from \"./CommentBox\";\r\nimport { demoPost } from \"../../Demo\";\r\nimport \"./ChatBox.css\";\r\nimport Card from \"./Card\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction DisplayBox(props) {\r\n  const posts = useSelector((state) => state?.data.posts);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"display-box\">\r\n        {posts.map((item) => {\r\n          return <Card data={item} key={item.postID} />;\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DisplayBox;\r\n","export default __webpack_public_path__ + \"static/media/E2.f0682dd5.png\";","import React, { useState } from \"react\";\r\nimport { UserActions } from \"../../Redux/Actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport \"./Profile.css\";\r\nimport ProfileImage from \"../../images/first.jpg\";\r\nimport EditIcon from \"../../images/E2.png\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nfunction Profile() {\r\n  const user = useSelector((state) => state?.user?.userData) || [];\r\n\r\n  const [data, setData] = useState({\r\n    handler: user.handler,\r\n    bio: user.bio,\r\n    location: user.location,\r\n  });\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  function handleLogout() {\r\n    dispatch(UserActions.logoutUser(history));\r\n  }\r\n\r\n  function handleImageChange(event) {\r\n    const image = event.target.files[0];\r\n  }\r\n\r\n  function handleEditPicture() {\r\n    const fileInput = document.getElementById(\"imageInput\");\r\n    fileInput.click();\r\n  }\r\n  function openDialog() {\r\n    let dialog = document.getElementById(\"myDialog\");\r\n    dialog.showModal();\r\n  }\r\n\r\n  function closeDialog() {\r\n    let dialog = document.getElementById(\"myDialog\");\r\n    clearState();\r\n    dialog.close();\r\n  }\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setData((Previous) => {\r\n      return { ...Previous, [name]: value };\r\n    });\r\n  };\r\n  const handleSave = () => {\r\n    if (!data.handler || !data.location) {\r\n      toast.error(\"Please fill Handler Name and Loaction\");\r\n    } else {\r\n      dispatch(UserActions.setUserData(data));\r\n      closeDialog();\r\n    }\r\n  };\r\n  const clearState = () => {\r\n    setData({\r\n      handler: data.handler,\r\n      bio: data.bio,\r\n      location: data.location,\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"profile-container\">\r\n      <img className=\"profile-image\" src={ProfileImage} alt=\"Profile-Img\" />\r\n      {/* <input\r\n        type=\"file\"\r\n        id=\"imageInput\"\r\n        hidden=\"hidden\"\r\n        onChange={handleImageChange}\r\n      /> */}\r\n      {/* <img\r\n        className=\"profile-image-edit\"\r\n        onClick={handleEditPicture}\r\n        src={EditIcon}\r\n        alt=\"Edit-Icon\"\r\n        title=\"Change Profile Photo\"\r\n      /> */}\r\n\r\n      <img\r\n        className=\"profile-details-edit\"\r\n        src={EditIcon}\r\n        onClick={openDialog}\r\n        alt=\"Edit-Icon\"\r\n        title=\"Edit Description\"\r\n      />\r\n      <div className=\"description\">\r\n        <span>\r\n          <b>Handle:-</b> {user.handler}\r\n        </span>\r\n        <span>\r\n          <b>Bio:-</b> {user.bio.substring(0, 60)}\r\n        </span>\r\n        <span>\r\n          <b>Location:-</b> {user.location}\r\n        </span>\r\n        <span>\r\n          <b>Joined On:-</b>1/10/2022\r\n        </span>\r\n      </div>\r\n      <dialog id=\"myDialog\">\r\n        <h2>Edit Info</h2>\r\n        <div className=\"edit-input-container\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"handler\"\r\n            className=\"edit-input-feild\"\r\n            onChange={(e) => handleChange(e)}\r\n            value={data.handler}\r\n            placeholder=\"Handler Name\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"location\"\r\n            className=\"edit-input-feild\"\r\n            onChange={(e) => handleChange(e)}\r\n            value={data.location}\r\n            placeholder=\"Location\"\r\n          />\r\n          <textarea\r\n            name=\"bio\"\r\n            className=\"edit-input-text-feild\"\r\n            onChange={(e) => handleChange(e)}\r\n            value={data.bio}\r\n            rows=\"8\"\r\n            placeholder=\"Bio...\"\r\n          />\r\n        </div>\r\n        <div className=\"footer\">\r\n          <button className=\"butn-close\" onClick={closeDialog}>\r\n            Close\r\n          </button>\r\n          <button className=\"butn-save\" onClick={handleSave}>\r\n            Save\r\n          </button>\r\n        </div>\r\n      </dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","export default __webpack_public_path__ + \"static/media/uwp332474.a4f583cb.jpeg\";","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"./Common.css\";\r\nimport Profile from \"../../images/uwp332474.jpeg\";\r\nimport moment from 'moment'\r\nimport { DataActions  } from \"../../Redux/Actions\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nfunction AddPost({userHandler}) {\r\n  const dispatch = useDispatch();\r\n  const [post, setPost] = useState();\r\n\r\n  const handleAddPost = () => {\r\n    if(!post){\r\n      toast.error(\"Please write something...\")\r\n    } else{\r\n      let jsonObj={\r\n        postID:6,\r\n        userName:userHandler || 'Gaurav',\r\n        image:Profile,\r\n        likeCount:0,\r\n        commentCount:0,\r\n        createdAt:moment().format('DD-MM-YYYY'),\r\n        post:post\r\n    }\r\n    dispatch(DataActions.addPost(jsonObj))\r\n    toast.success(\"Added Post Successfully\")\r\n    }\r\n    \r\n  };\r\n\r\n  function handleChange(e) {\r\n    const {  value } = e.target;\r\n    setPost(value);\r\n  }\r\n\r\n  return (\r\n    <div className=\"add-post\">\r\n      <textarea\r\n        name=\"post\"\r\n        id=\"\"\r\n        cols=\"35\"\r\n        rows=\"10\"\r\n        placeholder=\"Add a Post...\"\r\n        className=\"text-area\"\r\n        value={post}\r\n        onChange={handleChange}\r\n      />\r\n      <button className=\"post-button\" onClick={handleAddPost}>Comment</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddPost;\r\n","export default __webpack_public_path__ + \"static/media/Logo.89e76fc2.jpg\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Common.css\";\r\nimport Logo from \"../../images/Logo.jpg\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nfunction NavBar() {\r\n  const history= useHistory()\r\n  return (\r\n    <div className=\"navBar\">\r\n      <div className=\"logo-container\">\r\n        <img className=\"logos\" src={Logo} alt=\"profile\" />\r\n        <span>Chat house</span>\r\n      </div>\r\n      <div style={{ display: \"flex\", columnGap: \"20px\" }}>\r\n        <button className=\"nav-button\" onClick={()=>history.push('/home')}>Home</button>\r\n        <button className=\"nav-button\" onClick={()=>history.push('/')}>Logout</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport DisplayBox from \"../ChatBox/DisplayBox\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Profile from \"../UserDetails/Profile\";\r\nimport AddPost from \"./AddPost\";\r\nimport \"./Common.css\";\r\nimport NavBar from \"./NavBar\";\r\n\r\nfunction Home() {\r\n  const dispatch = useDispatch();\r\n\r\n  const posts = useSelector((state) => state?.data.posts);\r\n  const loading = useSelector((state) => state?.data.loading);\r\n  const userHandler = localStorage.getItem(\"userHandler\");\r\n\r\n  return (\r\n    <>\r\n      <div className=\"HomeContainer\">\r\n        <NavBar />\r\n        <div className=\"body-container\">\r\n          <AddPost userHandler={userHandler} />\r\n          <DisplayBox />\r\n          <Profile />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import { demoPost } from '../../Demo';\r\nimport {\r\n    SET_POSTS,\r\n    LIKE_POST,\r\n    UNLIKE_POST,\r\n    LOADING_DATA,\r\n    STOP_LOADING_DATA,\r\n    DELETE_POST,\r\n    POST_POST,\r\n    SET_POST,\r\n    SUBMIT_COMMENT\r\n  } from '../Actions/ActionType';\r\n  \r\n  const initialState = {\r\n    posts: [...demoPost],\r\n    post: {},\r\n    loading: false\r\n  };\r\n  \r\n  export default function(state = initialState, action) {\r\n    switch (action.type) {\r\n      case POST_POST:\r\n        return {\r\n          ...state,\r\n          posts: [action.payload, ...state.posts]\r\n        };\r\n\r\n      case SET_POSTS:\r\n        return {\r\n          ...state,\r\n          posts: action.payload,\r\n          loading: false\r\n        };\r\n      case SET_POST:\r\n        return {\r\n          ...state,\r\n          post: action.payload\r\n        };\r\n        \r\n      // case LIKE_POST:\r\n      // case UNLIKE_POST:\r\n      //   let index = state.posts.findIndex(\r\n      //     (post) => post.screamId === action.payload.screamId\r\n      //   );\r\n      //   state.posts[index] = action.payload;\r\n      //   if (state.post.screamId === action.payload.screamId) {\r\n      //     state.post = action.payload;\r\n      //   }\r\n      //   return {\r\n      //     ...state\r\n      //   };\r\n        \r\n      // case DELETE_POST:\r\n      //   index = state.posts.findIndex(\r\n      //     (post) => post.screamId === action.payload\r\n      //   );\r\n      //   state.posts.splice(index, 1);\r\n      //   return {\r\n      //     ...state\r\n      //   };\r\n        /*\r\n      case SUBMIT_COMMENT:\r\n        return {\r\n          ...state,\r\n          post: {\r\n            ...state.post,\r\n            comments: [action.payload, ...state.post.comments]\r\n          }\r\n        };*/\r\n      default:\r\n        return state;\r\n    }\r\n  }","import {\r\n  SET_USER,\r\n  SET_AUTHENTICATED,\r\n  SET_UNAUTHENTICATED,\r\n  LOADING_USER,\r\n  LIKE_POST,\r\n  UNLIKE_POST,\r\n  MARK_NOTIFICATIONS_READ,\r\n  SET_USER_DATA,\r\n} from \"../Actions/ActionType\";\r\n\r\nconst initialState = {\r\n  authenticated: false,\r\n  loading: false,\r\n  userData: {\r\n    handler: \"Gaurav\",\r\n    bio: \"Coder, Artist and much more...\",\r\n    location: \"Bangalore\",\r\n  },\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_USER_DATA:\r\n      return {\r\n        ...state,\r\n        userData: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n\r\n  // switch (action.type) {\r\n  //   case SET_AUTHENTICATED:\r\n  //     return {\r\n  //       ...state,\r\n  //       authenticated: true\r\n  //     };\r\n  //   case SET_UNAUTHENTICATED:\r\n  //     return initialState;\r\n  //   case SET_USER:\r\n  //     return {\r\n  //       authenticated: true,\r\n  //       loading: false,\r\n  //       ...action.payload\r\n  //     };\r\n  //   case LOADING_USER:\r\n  //     return {\r\n  //       ...state,\r\n  //       loading: true\r\n  //     };\r\n  //   case LIKE_POST:\r\n  //     return {\r\n  //       ...state,\r\n  //       likes: [\r\n  //         ...state.likes,\r\n  //         {\r\n  //           userHandle: state.credentials.handle,\r\n  //           postId: action.payload.postId\r\n  //         }\r\n  //       ]\r\n  //     };\r\n  //   case UNLIKE_POST:\r\n  //     return {\r\n  //       ...state,\r\n  //       likes: state.likes.filter(\r\n  //         (like) => like.postId !== action.payload.postId\r\n  //       )\r\n  //     };\r\n  //   case MARK_NOTIFICATIONS_READ:\r\n  //     state.notifications.forEach((not) => (not.read = true));\r\n  //     return {\r\n  //       ...state\r\n  //     };\r\n  //   default:\r\n  //     return state;\r\n  // }\r\n}\r\n","import {\r\n    SET_ERRORS,\r\n    CLEAR_ERRORS,\r\n    LOADING_UI,\r\n    STOP_LOADING_UI\r\n  } from '../Actions/ActionType';\r\n  \r\n  const initialState = {\r\n    loading: false,\r\n    errors: null\r\n  };\r\n  \r\n  export default function(state = initialState, action) {\r\n    switch (action.type) {\r\n      case SET_ERRORS:\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n          errors: action.payload\r\n        };\r\n      case CLEAR_ERRORS:\r\n        return {\r\n          ...state,\r\n          errors: null\r\n        };\r\n      case LOADING_UI:\r\n        return {\r\n          ...state,\r\n          loading: true\r\n        };\r\n      case STOP_LOADING_UI:\r\n        return {\r\n          ...state,\r\n          loading: false\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }","import {combineReducers} from \"redux\"\r\nimport DataReducer from \"./DataReducer\"\r\nimport UserReducer from \"./UserReducer\"\r\nimport UIReducer from \"./UIReducer\"\r\n\r\nconst rootReducer= combineReducers({\r\n    \"user\":UserReducer,\r\n    \"data\":DataReducer,\r\n    \"UI\":UIReducer\r\n\r\n})\r\n\r\nexport default rootReducer","import {createStore, applyMiddleware, compose} from \"redux\"\r\nimport thunk from \"redux-thunk\"\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport rootReducer from \"../Redux/Reducer/RootReducer\"\r\n\r\nconst store= createStore(rootReducer,compose(applyMiddleware(thunkMiddleware), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()))\r\n\r\nexport default store\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport Logo from \"../../images/Logo.jpg\";\r\nimport \"./Auth.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nfunction LoginSignUp({ title, onSubmit }) {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const [user, setUser] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    handlerName: \"\",\r\n  });\r\n  const [disableButton, setDisableButton] = useState(true);\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUser((previous) => {\r\n      return {\r\n        ...previous,\r\n        [name]: value,\r\n      };\r\n    });\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (validateEmail(user.email)) {\r\n      toast.error(\"Invalid Email\");\r\n    } else if (!user.password) {\r\n      toast.error(\"Enter Password\");\r\n    } else if (title === \"Login\") {\r\n      setTimeout(() => {\r\n        history.push(\"/home\");\r\n      }, 1000);\r\n    } else if (title === \"Sign-Up\") {\r\n      if (!user.confirmPassword) {\r\n        toast.error(\"Enter Confirm Password\");\r\n      } else if (user.confirmPassword !== user.password) {\r\n        toast.error(\"Password and Confirm Password doesn't match\");\r\n      } else if (!user.handlerName) {\r\n        toast.error(\"Enter Handler Name\");\r\n      } else {\r\n        localStorage.setItem(\"userHandler\", user.handlerName);\r\n        setTimeout(() => {\r\n          history.push(\"/home\");\r\n        }, 1000);\r\n      }\r\n    }\r\n  };\r\n  const validateEmail = (email) => {\r\n    // Regular expression pattern for email validation\r\n    const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return !emailPattern.test(email);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const { email, password, confirmPassword, handlerName } = user;\r\n    if (email && password && title === \"Login\") {\r\n      setDisableButton(false);\r\n    }\r\n    if (\r\n      email &&\r\n      password &&\r\n      confirmPassword &&\r\n      handlerName &&\r\n      title === \"Sign-Up\"\r\n    ) {\r\n      setDisableButton(false);\r\n    }\r\n  }, [user]);\r\n\r\n  return (\r\n    <div className=\"login-signup-background-container\">\r\n      <div\r\n        className=\"login-signup-container\"\r\n        style={{\r\n          height: title === \"Sign-Up\" ? \"95vh\" : \"\",\r\n        }}\r\n      >\r\n        <div className=\"brand-container\">\r\n          <img className=\"logo\" src={Logo} alt=\"profile\" />\r\n          <span className=\"brand-name\">Chat House</span>\r\n          <span>Your Personal Chat Oasis - Where Conversations Flourish!</span>\r\n        </div>\r\n        <h2>{title}</h2>\r\n        <div className=\"input-container\">\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email address\"\r\n            required\r\n            className=\"input-feild\"\r\n            name=\"email\"\r\n            value={user?.email}\r\n            onChange={(e) => handleChange(e)}\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            required\r\n            className=\"input-feild\"\r\n            name=\"password\"\r\n            value={user?.password}\r\n            onChange={(e) => handleChange(e)}\r\n          />\r\n          {title === \"Sign-Up\" && (\r\n            <>\r\n              <input\r\n                type=\"password\"\r\n                placeholder=\"Confirm Password\"\r\n                required\r\n                className=\"input-feild\"\r\n                name=\"confirmPassword\"\r\n                value={user?.confirmPassword}\r\n                onChange={(e) => handleChange(e)}\r\n              />\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Handler Name\"\r\n                required\r\n                className=\"input-feild\"\r\n                name=\"handlerName\"\r\n                value={user?.handlerName}\r\n                onChange={(e) => handleChange(e)}\r\n              />\r\n            </>\r\n          )}\r\n          <button\r\n            type=\"submit\"\r\n            onClick={() => handleSubmit()}\r\n            className=\"submit-button\"\r\n          >\r\n            Continue\r\n          </button>\r\n        </div>\r\n        <div\r\n          style={{\r\n            marginTop: \"50px\",\r\n          }}\r\n        >\r\n          {title === \"Login\" && (\r\n            <>\r\n              <h2>Don't have an account?</h2>\r\n              <div\r\n                className=\"switch-mode\"\r\n                onClick={() => {\r\n                  history.push(\"/signup\");\r\n                  setDisableButton(true);\r\n                }}\r\n              >\r\n                Create account\r\n              </div>\r\n            </>\r\n          )}\r\n          {title === \"Sign-Up\" && (\r\n            <>\r\n              <h2>Already have an account?</h2>\r\n              <div\r\n                className=\"switch-mode\"\r\n                onClick={() => {\r\n                  history.push(\"/login\");\r\n                  setDisableButton(true);\r\n                }}\r\n              >\r\n                Login\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginSignUp;\r\n","\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Home from './Components/Common/Home';\r\nimport NavBar from \"./Components/Common/NavBar\";\r\nimport {Provider} from \"react-redux\"\r\nimport store from \"./Redux/Store\"\r\nimport axios from 'axios';\r\nimport jwtDecode from 'jwt-decode';\r\nimport { SET_AUTHENTICATED } from './Redux/Actions/ActionType';\r\nimport { logoutUser } from './Redux/Actions/UserAction';\r\nimport { useHistory } from 'react-router'\r\nimport LoginSignUp from \"./Components/Auth/LoginSignUp\";\r\nimport \"./Components/Common/Common.css\"\r\n\r\nconst token = localStorage.Token;\r\n// if (token) {\r\n//   const decodedToken = jwtDecode(token);\r\n//   if (decodedToken.exp * 1000 < Date.now()) {\r\n    // const history = useHistory()\r\n//     store.dispatch(logoutUser());\r\n//     window.location.href = '/';\r\n//   } else {\r\n//     store.dispatch({ type: SET_AUTHENTICATED });\r\n//     axios.defaults.headers.common['Authorization'] = token;\r\n//     // store.dispatch(getUserData());\r\n//   }\r\n// }\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Provider store={store}>\r\n      {/* <NavBar/> */}\r\n      <Switch>\r\n      <Route exact path=\"/home\" component={Home} />\r\n      <Route exact path=\"/signup\" render={() =><LoginSignUp title='Sign-Up'/>} />\r\n      <Route exact path=\"/login\" render={() =><LoginSignUp title='Login' />} />\r\n      <Route exact path=\"/\" render={() =><LoginSignUp title='Login'/>} />\r\n    </Switch>\r\n    </Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport {BrowserRouter} from \"react-router-dom\"\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { getDefaultNormalizer } from '@testing-library/react';\r\n\r\ntoast.configure();\r\n\r\n//chathouse-53a7e\r\n// email: gauravtest@gmail.com\r\n// password: gaurav12#\r\n// handle: gaurav12#\r\n\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n    </BrowserRouter>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}